name: CI Ubuntu

on:
  push:
    branches:
      - master
      - next-release
      - release-stage
      - stage
      - ballerina-[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches:
      - master
      - next-release
      - release-stage
      - stage
      - ballerina-[0-9]+.[0-9]+.[0-9]+

jobs:
  ubuntu_build:
    name: Build with all tests on Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 75

    steps:
      - uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '8.x'

      - name: Initialize sub-modules
        run: git submodule update --init

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build with Gradle
        run: |
          export DISPLAY=':99.0'
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          ./gradlew build --max-workers=2 --scan

          find ~/.gradle/caches/ -name "*.lock" -type f -delete

      - name: Get jballerina-tools file location
        id: getdist
        run: echo "::set-output name=file::$(ls distribution/zip/jballerina-tools/build/distributions/jballerina-tools-*.zip)"

      - name: Upload jballerina-tools.zip
        uses: actions/upload-artifact@v2
        with:
          name: jballerina-tools
          path: ${{ steps.getdist.outputs.file }}

      - name: Get vscode vsix file location
        id: getvscode
        run: echo "::set-output name=file::$(ls tool-plugins/vscode/*.vsix)"

      - name: Upload vscode.vsix
        uses: actions/upload-artifact@v2
        with:
          name: vscode-vsix
          path: ${{ steps.getvscode.outputs.file }}

