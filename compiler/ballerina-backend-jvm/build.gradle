/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 
apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"

dependencies {
    baloCreat project(':lib-creator-milestone')
//    baloCreat project(':lib-creator')
}

dependencies {
    implementation project(':ballerina-lang')
    implementation project(':ballerina-core')
    implementation project(':ballerina-bir')

    baloImplementation project(path: ':ballerina-jvm', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-bir', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-builtin', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-utils', configuration: 'baloImplementation')

    //transitive
    baloImplementation project(path: ':ballerina-encoding', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-internal', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-time', configuration: 'baloImplementation')
}

task createBalx(type: JavaExec) {
    def balFiles = file("src/main/ballerina/")
    dependsOn createBalHome
    main 'org.ballerinalang.compiler.backend.jvm.GenerateBalx'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty "ballerina.home", "$buildDir"

    args(balFiles, "compiler_backend_jvm", "$buildDir/generated-balx/compiler_backend_jvm.balx")

    inputs.dir(new File(balFiles, "compiler_backend_jvm"))
    inputs.files(configurations.baloImplementation)
    outputs.dir("$buildDir/generated-balx")
    outputs.cacheIf { true }
}

jar {
  from ("$buildDir/generated-balx") {
      into "META-INF/ballerina"
  }
  dependsOn createBalx
}
