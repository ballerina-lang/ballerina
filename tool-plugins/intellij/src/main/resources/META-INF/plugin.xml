<idea-plugin>
    <id>io.ballerina</id>
    <name>Ballerina</name>
    <version>0.991.0</version>
    <vendor email="ballerinalang@wso2.com" url="http://wso2.org">WSO2 Inc.</vendor>

    <description><![CDATA[
      <a href="https://ballerina.io/">Ballerina</a> is a simple programming language whose syntax and runtime address the hard problems of integration. As a Turing complete language, Ballerina enables agility with edit, build, and run cycles. Ballerina code is compiled into services that include transactions, embedded brokers and gateway runtimes.
    ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li>Improved performance, stability and reduced plugin size with “Lsp4IntelliJ” language client support.</li>
        <li>Ballerina language server based code formatting.</li>
        <li>Minor bug fixes and improvements.</li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="163"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products -->
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="java-deps.xml">com.intellij.modules.java</depends>
    <module-components>
        <component>
            <implementation-class>
                io.ballerina.plugins.idea.project.BallerinaModuleLibrariesInitializer
            </implementation-class>
        </component>
    </module-components>

    <extensions defaultExtensionNs="com.intellij">

        <!--lsp4intellij extensions-->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="LSPCompletionContributor" language="Ballerina"/>

        <localInspection displayName="LSP" shortName="LSP" enabledByDefault="true"
                         implementationClass="org.wso2.lsp4intellij.contributors.inspection.DummyLSPInspection"/>

        <!--Ballerina plugin extensions-->
        <fileTypeFactory implementation="io.ballerina.plugins.idea.BallerinaFileTypeFactory"/>

        <lang.parserDefinition language="Ballerina"
                               implementationClass="io.ballerina.plugins.idea.BallerinaParserDefinition"/>
        <lang.ast.factory language="Ballerina"
                          implementationClass="io.ballerina.plugins.idea.BallerinaASTFactory"/>
        <lang.commenter language="Ballerina" implementationClass="io.ballerina.plugins.idea.BallerinaCommenter"/>

        <lang.syntaxHighlighterFactory language="Ballerina"
                                       implementationClass="io.ballerina.plugins.idea.highlighting.BallerinaSyntaxHighlighterFactory"/>
        <!--Add organization index-->

        <indexPatternBuilder implementation="io.ballerina.plugins.idea.BallerinaIndexPatternBuilder"/>

        <codeInsight.lineMarkerProvider language="Ballerina"
                                        implementationClass="io.ballerina.plugins.idea.marker.BallerinaTypeFunctionMarker"/>

        <lang.elementManipulator forClass="io.ballerina.plugins.idea.psi.BallerinaCompletePackageName"
                                 implementationClass="io.ballerina.plugins.idea.psi.manipulator.BallerinaPackageManipulator"/>

        <spellchecker.support language="Ballerina"
                              implementationClass="io.ballerina.plugins.idea.spellchecker.BallerinaSpellcheckingStrategy"/>

        <!--<defaultTemplatePropertiesProvider-->
        <!--implementation="org.ballerinalang.plugins.idea.actions.BallerinaTemplatePropertiesProvider"/>-->

        <annotator language="Ballerina"
                   implementationClass="io.ballerina.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator"/>

        <!-- file templates -->
        <internalFileTemplate name="Ballerina File"/>
        <internalFileTemplate name="Ballerina Main"/>

        <lang.braceMatcher language="Ballerina"
                           implementationClass="io.ballerina.plugins.idea.codeinsight.highlighting.BallerinaPairedBraceMatcher"/>

        <!--folding builder-->
        <lang.foldingBuilder language="Ballerina"
                             implementationClass="io.ballerina.plugins.idea.editor.BallerinaFoldingBuilder"/>

        <!--formatter-->
        <!--<lang.formatter language="Ballerina"-->
        <!--implementationClass="io.ballerina.plugins.idea.formatter.BallerinaFormattingModelBuilder"/>-->
        <codeStyleSettingsProvider
                implementation="io.ballerina.plugins.idea.formatter.settings.BallerinaCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="io.ballerina.plugins.idea.formatter.settings.BallerinaLanguageCodeStyleSettingsProvider"/>

        <quoteHandler fileType="Ballerina file"
                      className="io.ballerina.plugins.idea.codeinsight.editoractions.BallerinaQuoteHandler"/>

        <enterHandlerDelegate
                implementation="io.ballerina.plugins.idea.formatter.BallerinaEnterBetweenBracesHandler"/>
        <enterHandlerDelegate
                implementation="io.ballerina.plugins.idea.formatter.BallerinaEnterInDocumentationHandler"/>

        <!-- sdk -->
        <sdkType implementation="io.ballerina.plugins.idea.sdk.BallerinaSdkType"/>
        <!--<projectSdkSetupValidator id="BallerinaSdk"-->
        <!--implementation="org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaProjectSdkSetupValidator"/>-->
        <library.presentationProvider
                implementation="io.ballerina.plugins.idea.sdk.BallerinaSdkLibraryPresentationProvider"/>
        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.sdk.BallerinaPathModificationTracker"/>

        <projectService serviceInterface="io.ballerina.plugins.idea.sdk.BallerinaSdkService"
                        serviceImplementation="io.ballerina.plugins.idea.sdk.BallerinaSmallIDEsSdkService"
                        overrides="false"/>

        <editorNotificationProvider
                implementation="io.ballerina.plugins.idea.inspections.WrongSdkConfigurationNotificationProvider"/>

        <editorNotificationProvider
                implementation="io.ballerina.plugins.idea.inspections.VersionMismatchNotificationProvider"/>

        <!-- module -->
        <moduleType id="BALLERINA_MODULE" implementationClass="io.ballerina.plugins.idea.BallerinaModuleType"/>
        <moduleConfigurationEditorProvider
                implementation="io.ballerina.plugins.idea.configuration.BallerinaModuleEditorsProvider"
                order="first"/>
        <editorNotificationProvider
                implementation="io.ballerina.plugins.idea.inspections.WrongModuleTypeNotificationProvider"/>

        <!-- run application -->
        <programRunner id="ballerinaRunner" implementation="io.ballerina.plugins.idea.runconfig.BallerinaRunner"/>

        <configurationType
                implementation="io.ballerina.plugins.idea.runconfig.application.BallerinaApplicationRunConfigurationType"/>
        <runConfigurationProducer
                implementation="io.ballerina.plugins.idea.runconfig.application.BallerinaApplicationRunConfigurationProducer"/>

        <runLineMarkerContributor language="Ballerina"
                                  implementationClass="io.ballerina.plugins.idea.runconfig.BallerinaRunLineMarkerProvider"/>
        <!--<runLineMarkerContributor language="Ballerina"-->
        <!--implementationClass="org.ballerinalang.plugins.idea.runconfig.BallerinaTestLineMarkerProvider"/>-->

        <console.folding implementation="io.ballerina.plugins.idea.runconfig.BallerinaConsoleFolding"/>

        <!--remote-->
        <configurationType
                implementation="io.ballerina.plugins.idea.runconfig.remote.BallerinaRemoteRunConfigurationType"/>
        <runConfigurationProducer
                implementation="io.ballerina.plugins.idea.runconfig.remote.BallerinaRemoteRunConfigurationProducer"/>

        <!-- debugger -->
        <programRunner id="ballerinaDebugger"
                       implementation="io.ballerina.plugins.idea.runconfig.BallerinaDebugger"/>
        <xdebugger.breakpointType
                implementation="io.ballerina.plugins.idea.debugger.breakpoint.BallerinaBreakPointType"/>

        <!--project-->
        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.project.BallerinaApplicationLibrariesService"/>
        <projectService
                serviceImplementation="io.ballerina.plugins.idea.project.BallerinaProjectLibrariesService"/>
        <projectConfigurable id="Ballerina" groupId="language"
                             provider="io.ballerina.plugins.idea.configuration.BallerinaConfigurableProvider"
                             dynamic="true"/>
        <projectExtension implementation="io.ballerina.plugins.idea.project.BallerinaProjectExtension"/>
        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.codeinsight.imports.BallerinaCodeInsightSettings"/>
        <projectStructureDetector
                implementation="io.ballerina.plugins.idea.project.BallerinaProjectStructureDetector"/>
        <directoryProjectGenerator
                implementation="io.ballerina.plugins.idea.BallerinaProjectGenerator"/> <!-- for small IDEs-->

        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.codeinsight.semanticanalyzer.BallerinaSemanticAnalyzerSettings"/>

        <preloadingActivity
                implementation="io.ballerina.plugins.idea.preloading.BallerinaPreloadingActivity"
                id="io.ballerina.plugins.idea.preloading.BallerinaPreloadingActivity"/>
    </extensions>

    <actions>
        <!-- Ballerina Plugin Actions -->
        <action id="Ballerina.NewBallerinaFile" class="io.ballerina.plugins.idea.actions.BallerinaCreateFileAction"
                text="Ballerina File" description="Create new Ballerina file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>

        <action class="org.wso2.lsp4intellij.actions.LSPReformatAction" id="ReformatCode"
                use-shortcut-of="ReformatCode"
                overrides="true" text="Reformat Code"/>
        <action class="org.wso2.lsp4intellij.actions.LSPShowReformatDialogAction" id="ShowReformatFileDialog"
                use-shortcut-of="ShowReformatFileDialog" overrides="true" text="Show Reformat File Dialog"/>
        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction"
                id="LSPFindUsages">
            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
        </action>
    </actions>

    <application-components>
        <component>
            <implementation-class>org.wso2.lsp4intellij.IntellijLanguageClient</implementation-class>
        </component>
    </application-components>

</idea-plugin>
