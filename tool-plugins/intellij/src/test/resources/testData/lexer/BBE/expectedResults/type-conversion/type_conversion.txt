import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('""')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Employee')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('""')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('empNo')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('convertType')
( ('(')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('emp')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The `convert()` creates a new value and changes its type without editing provided value's inherent type.')
WHITE_SPACE ('\n    ')
identifier ('Person')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('empPerson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('Person')
. ('.')
identifier ('convert')
( ('(')
identifier ('emp')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"empPerson name: "')
, (',')
WHITE_SPACE ('\n                ')
( ('(')
identifier ('empPerson')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('Person')
) (')')
WHITE_SPACE (' ')
? ('?')
WHITE_SPACE (' ')
identifier ('empPerson')
[ ('[')
QUOTED_STRING_LITERAL ('"name"')
] (']')
WHITE_SPACE (' ')
: (':')
WHITE_SPACE (' ')
identifier ('empPerson')
. ('.')
identifier ('reason')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('convertSimpleTypes')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// The `convert()` can be used to explicity convert simple values as below.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('s1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"45"')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('s2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"abc"')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('s3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"true"')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('10.2')
; (';')
WHITE_SPACE ('\n    ')
any ('any')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('3.14')
; (';')
WHITE_SPACE ('\n    \n    ')
int ('int')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('intVal1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
int ('int')
. ('.')
identifier ('convert')
( ('(')
identifier ('s1')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
int ('int')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('intVal2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
int ('int')
. ('.')
identifier ('convert')
( ('(')
identifier ('s2')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('intVal3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
int ('int')
. ('.')
identifier ('convert')
( ('(')
identifier ('f')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
boolean ('boolean')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('b')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
boolean ('boolean')
. ('.')
identifier ('convert')
( ('(')
identifier ('s3')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
float ('float')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('af')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
float ('float')
. ('.')
identifier ('convert')
( ('(')
identifier ('a')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('intVal1')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
int ('int')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Int value 1 : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('intVal1')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('intVal1')
. ('.')
identifier ('reason')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('intVal2')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
int ('int')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Int value 2 : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('intVal2')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('intVal2')
. ('.')
identifier ('reason')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Int value 3 : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('intVal3')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('b')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
boolean ('boolean')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Boolean value : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('b')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('b')
. ('.')
identifier ('reason')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('af')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
float ('float')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Float value : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('af')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('af')
. ('.')
identifier ('reason')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
PUBLIC ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('emp')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Jack Sparrow"')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('54')
, (',')
WHITE_SPACE (' ')
identifier ('empNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('100')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('convertType')
( ('(')
identifier ('emp')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('convertSimpleTypes')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
