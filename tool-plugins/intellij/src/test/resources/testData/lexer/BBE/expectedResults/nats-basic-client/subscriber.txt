LINE_COMMENT ('// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.')
WHITE_SPACE ('\n')
LINE_COMMENT ('//')
WHITE_SPACE ('\n')
LINE_COMMENT ('// WSO2 Inc. licenses this file to you under the Apache License,')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Version 2.0 (the "License"); you may not use this file except')
WHITE_SPACE ('\n')
LINE_COMMENT ('// in compliance with the License.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// You may obtain a copy of the License at')
WHITE_SPACE ('\n')
LINE_COMMENT ('//')
WHITE_SPACE ('\n')
LINE_COMMENT ('// http://www.apache.org/licenses/LICENSE-2.0')
WHITE_SPACE ('\n')
LINE_COMMENT ('//')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Unless required by applicable law or agreed to in writing,')
WHITE_SPACE ('\n')
LINE_COMMENT ('// software distributed under the License is distributed on an')
WHITE_SPACE ('\n')
LINE_COMMENT ('// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY')
WHITE_SPACE ('\n')
LINE_COMMENT ('// KIND, either express or implied.  See the License for the')
WHITE_SPACE ('\n')
LINE_COMMENT ('// specific language governing permissions and limitations')
WHITE_SPACE ('\n')
LINE_COMMENT ('// under the License.')
WHITE_SPACE ('\n\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('nats')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Initialize NATS listener.')
WHITE_SPACE ('\n')
listener ('listener')
WHITE_SPACE (' ')
identifier ('nats')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('subscription')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
{ ('{')
WHITE_SPACE (' ')
identifier ('host')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"localhost"')
, (',')
WHITE_SPACE (' ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('4222')
, (',')
WHITE_SPACE ('\n                                            ')
identifier ('clientId')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"s0"')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Bind consumer to listen to messages published to 'demo' subject.')
WHITE_SPACE ('\n')
@ ('@')
identifier ('nats')
: (':')
identifier ('ConsumerConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('subject')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"demo"')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('demo')
WHITE_SPACE (' ')
on ('on')
WHITE_SPACE (' ')
identifier ('subscription')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onMessage')
( ('(')
identifier ('nats')
: (':')
identifier ('Message')
WHITE_SPACE (' ')
identifier ('msg')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Print the incoming message in the std out.')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Received message : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('msg')
. ('.')
identifier ('getData')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n')
} ('}')
