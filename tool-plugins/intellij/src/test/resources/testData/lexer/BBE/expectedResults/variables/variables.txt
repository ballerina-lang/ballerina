import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a module-level variable that is private to the module.')
WHITE_SPACE ('\n')
int ('int')
WHITE_SPACE (' ')
identifier ('total')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('99')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a public module-level variable.')
WHITE_SPACE ('\n')
PUBLIC ('public')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('count')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a constant. `const`'s value is frozen. Value is computed at compile time therefore immutable.')
WHITE_SPACE ('\n')
CONST ('const')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('OK')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"ok"')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a public final variable that behaves as a constant for other modules.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Value of final variable is forzen. All the parameters for a function call is also implicitly final.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Value is computed at runtime therefore not immutable but cannot assign any other value since variable is final.')
WHITE_SPACE ('\n')
PUBLIC ('public')
WHITE_SPACE (' ')
final ('final')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('status')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n\n')
PUBLIC ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Access a global variable.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('total')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('count')
WHITE_SPACE (' ')
+= ('+=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('count')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This is a local variable.')
WHITE_SPACE ('\n    ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('available')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('available')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
