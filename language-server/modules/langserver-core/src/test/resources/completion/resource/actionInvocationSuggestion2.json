{
  "position": {
    "line": 5,
    "character": 20
  },
  "source": "resource/source/actionInvocationSuggestion2.bal",
  "items": [
    {
      "label": "continue()(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends a `100-continue` response to the caller.\n  \n  \n---    \n**Parameters**  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "continue()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "redirect(http:Response response, 300|301|302|303|304|305|307|308 code, string[] locations)(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends a redirect response to the user with the specified redirection status code.\n  \n  \n---    \n**Parameters**  \n- _response_  \n    Response to be sent to the caller  \n  \n- _code_  \n    The redirect status code to be sent  \n  \n- _locations_  \n    An array of URLs to which the caller can redirect to  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "redirect(${1:response}, ${2:code}, ${3:locations})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ok(ballerina/http:Response|string|xml|json|byte[]|ballerina/io:ReadableByteChannel|ballerina/mime:Entity[] message)(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller with the status 200 OK.\n  \n  \n---    \n**Parameters**  \n- _message_  \n    The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n            or `mime:Entity[]`  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "ok(${1:message})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "created(string uri, ballerina/http:Response|string|xml|json|byte[]|ballerina/io:ReadableByteChannel|ballerina/mime:Entity[] message \u003d ())(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller with the status 201 Created.\n  \n  \n---    \n**Parameters**  \n- _uri_  \n    Represents the most specific URI for the newly created resource  \n  \n- _message_  \n    The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n            or `mime:Entity[]`. This message is optional.  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "created(${1:uri}, message \u003d ${2:()})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "accepted(ballerina/http:Response|string|xml|json|byte[]|ballerina/io:ReadableByteChannel|ballerina/mime:Entity[] message \u003d ())(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller with the status 202 Accepted.\n  \n  \n---    \n**Parameters**  \n- _message_  \n    The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n            or `mime:Entity[]`. This message is optional.  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "accepted(message \u003d ${1:()})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "respond(ballerina/http:Response|string|xml|json|byte[]|ballerina/io:ReadableByteChannel|ballerina/mime:Entity[] message)(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller.\n  \n  \n---    \n**Parameters**  \n- _message_  \n    The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n            or `mime:Entity[]`  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "respond(${1:message})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "promise(http:PushPromise promise)(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nPushes a promise to the caller.\n  \n  \n---    \n**Parameters**  \n- _promise_  \n    Push promise message  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "promise(${1:promise})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "pushPromisedResponse(http:PushPromise promise, http:Response response)(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends a promised push response to the caller.\n  \n  \n---    \n**Parameters**  \n- _promise_  \n    Push promise message  \n  \n- _response_  \n    The outbound response  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "pushPromisedResponse(${1:promise}, ${2:response})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "acceptWebSocketUpgrade(map headers)(ballerina/http:WebSocketCaller)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nSends an upgrade request with custom headers.\n  \n  \n---    \n**Parameters**  \n- _headers_  \n    A `map` of custom headers for handshake  \n  \n  \n**Return**  \nballerina/http:WebSocketCaller"
        }
      },
      "sortText": "121",
      "insertText": "acceptWebSocketUpgrade(${1:headers})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "cancelWebSocketUpgrade(int status, string reason)(error?)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "markdown**Package:** _ballerina/http_  \n  \nCancels the handshake.\n  \n  \n---    \n**Parameters**  \n- _status_  \n    Error Status code for cancelling the upgrade and closing the connection.\n           This error status code need to be 4xx or 5xx else the default status code would be 400.  \n  \n- _reason_  \n    Reason for cancelling the upgrade  \n  \n  \n**Return**  \nballerina/http:"
        }
      },
      "sortText": "121",
      "insertText": "cancelWebSocketUpgrade(${1:status}, ${2:reason})",
      "insertTextFormat": "Snippet"
    }
  ]
}