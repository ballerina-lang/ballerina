{
  "position": {
    "line": 3,
    "character": 7
  },
  "source": "toplevel/source/globalVarDef1.bal",
  "items": [
    {
      "label":"import",
      "kind":"Keyword",
      "detail":"Keyword",
      "insertText":"import ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"function",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"function ${1:name}(${2}) {\n\t${3}\n}",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"public main function",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"public function main(string... args) {\n\t${1}\n}",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"service/http",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"service ${1:serviceName} on new http:Listener(8080) {\n\tresource function ${2:newResource}(http:Caller ${3:caller}, http:Request ${5:request}) {\n\t\t\n\t}\n}",
      "insertTextFormat":"Snippet",
      "additionalTextEdits":[

      ]
    },
    {
      "label":"service/webSocket",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"service ${1:serviceName} on new http:WebSocketListener(9090) {\n\tresource function onOpen(http:WebSocketCaller caller) {\n\t\t\n\t}\n\tresource function onText(http:WebSocketCaller caller, string data, boolean finalFrame) {\n\t\t\n\t}\n\tresource function onClose(http:WebSocketCaller caller, int statusCode, string reason) {\n\t\t\n\t}\n}",
      "insertTextFormat":"Snippet",
      "additionalTextEdits":[

      ]
    },
    {
      "label":"service/webSub",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"service ${1:websubSubscriber} on new websub:Listener(9092) {\n\tresource function onIntentVerification(websub:Caller caller, websub:IntentVerificationRequest request) {\n\t\t\n\t}\n\tresource function onNotification(websub:Notification notification) {\n\t\t\n\t}\n}",
      "insertTextFormat":"Snippet",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/websub;\n"
        }
      ]
    },
    {
      "label":"annotation",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"annotation\u003c${1:attachmentPoint}\u003e ${2:name};",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"xmlns",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"xmlns \"${1}\" as ${2:ns};",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"type \u003cObjectName\u003e object",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"type ${1:ObjectName} object {\n\t${2}\n};",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"type \u003cRecordName\u003e record",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"type ${1:RecordName} record {\n\t${2}\n};",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"type",
      "kind":"Keyword",
      "detail":"Keyword",
      "insertText":"type ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"public",
      "kind":"Keyword",
      "detail":"Keyword",
      "insertText":"public ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"final",
      "kind":"Keyword",
      "detail":"Keyword",
      "insertText":"final ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"const",
      "kind":"Keyword",
      "detail":"Keyword",
      "insertText":"const ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"extern",
      "kind":"Keyword",
      "detail":"Keyword",
      "insertText":"extern ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"error",
      "kind":"Snippet",
      "detail":"Snippet",
      "insertText":"error ${1:name} \u003d error(\"${2:errorCode}\", { message: \"${3}\" });",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"listener",
      "kind":"Keyword",
      "detail":"Keyword",
      "insertText":"listener ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"channel",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"channel"
    },
    {
      "label":"xml",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"xml"
    },
    {
      "label":"TableConfig",
      "kind":"Class",
      "detail":"BType",
      "documentation":{
        "left":"TableConfig represents properties used during table initialization.\n"
      },
      "insertText":"TableConfig"
    },
    {
      "label":"byte",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"byte"
    },
    {
      "label":"stream",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"stream"
    },
    {
      "label":"AbstractListener",
      "kind":"Class",
      "detail":"BType",
      "insertText":"AbstractListener"
    },
    {
      "label":"map",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"map"
    },
    {
      "label":"table",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"table"
    },
    {
      "label":"anydata",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"anydata"
    },
    {
      "label":"future",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"future"
    },
    {
      "label":"typedesc",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"typedesc"
    },
    {
      "label":"float",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"float"
    },
    {
      "label":"null",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"null"
    },
    {
      "label":"decimal",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"decimal"
    },
    {
      "label":"string",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"string"
    },
    {
      "label":"pkg1Obj1",
      "kind":"Class",
      "detail":"BType",
      "insertText":"pkg1Obj1"
    },
    {
      "label":"error",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"error"
    },
    {
      "label":"json",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"json"
    },
    {
      "label":"any",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"any"
    },
    {
      "label":"int",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"int"
    },
    {
      "label":"boolean",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"boolean"
    },
    {
      "label":"service",
      "kind":"Keyword",
      "detail":"BType",
      "insertText":"service"
    },
    {
      "label":"queryTableWithJoinClause(string sqlQuery, table fromTable, table joinTable, any parameters, any retType)(table\u003c$anonType$builtin$8\u003e)",
      "kind":"Function",
      "detail":"Function",
      "documentation":{
        "right":{
          "kind":"markdown",
          "value":"**Package:** _ballerina/builtin_  \n  \nExecute the given sql query to fetch the records and return as a new in memory table.\n  \n  \n---    \n**Parameters**  \n- _sqlQuery_  \n    The query to execute  \n  \n- _fromTable_  \n    The table on which the query is executed  \n  \n- _joinTable_  \n    The table which is joined with \u0027fromTable\u0027  \n  \n- _parameters_  \n    liternal parameters to be passed to prepared statement \u0027sqlQuery\u0027  \n  \n- _retType_  \n    return type of the resultant table instance  \n"
        }
      },
      "sortText":"120",
      "insertText":"queryTableWithJoinClause(${1:sqlQuery}, ${2:fromTable}, ${3:joinTable}, ${4:parameters}, ${5:retType})",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"queryTableWithoutJoinClause(string sqlQuery, table fromTable, any parameters, any retType)(table\u003c$anonType$builtin$10\u003e)",
      "kind":"Function",
      "detail":"Function",
      "documentation":{
        "right":{
          "kind":"markdown",
          "value":"**Package:** _ballerina/builtin_  \n  \nExecute the given sql query to fetch the records and return as a new in memory table.\n  \n  \n---    \n**Parameters**  \n- _sqlQuery_  \n    The query to execute  \n  \n- _fromTable_  \n    The table on which the query is executed  \n  \n- _parameters_  \n    literal parameters to be passed to prepared statement \u0027sqlQuery\u0027  \n  \n- _retType_  \n    return type of the resultant table instance  \n"
        }
      },
      "sortText":"120",
      "insertText":"queryTableWithoutJoinClause(${1:sqlQuery}, ${2:fromTable}, ${3:parameters}, ${4:retType})",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"startForever(string streamQuery, any inStreamRefs, any inTableRefs, any outStreamRefs, any outTableRefs, any funcPointers)",
      "kind":"Function",
      "detail":"Function",
      "documentation":{
        "right":{
          "kind":"markdown",
          "value":"**Package:** _ballerina/builtin_  \n  \nCreates the forever runtime.\n  \n  \n---    \n**Parameters**  \n- _streamQuery_  \n    The siddhi query by which the siddhi app runtime is created  \n  \n- _inStreamRefs_  \n    References of the input streams in the forever  \n  \n- _inTableRefs_  \n    References of the input tables in the forever  \n  \n- _outStreamRefs_  \n    References of the output streams in the forever  \n  \n- _outTableRefs_  \n    References of the output tables in the forever  \n  \n- _funcPointers_  \n    References of the functions to invoke as the streaming action  \n"
        }
      },
      "sortText":"120",
      "insertText":"startForever(${1:streamQuery}, ${2:inStreamRefs}, ${3:inTableRefs}, ${4:outStreamRefs}, ${5:outTableRefs}, ${6:funcPointers});",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"pkg1PrivateFunc1(int a)(int)",
      "kind":"Function",
      "detail":"Function",
      "documentation":{
        "right":{
          "kind":"markdown",
          "value":"markdown**Package:** _._  \n  \nnull  \n  \n---    \n**Parameters**  \n  \n  \n**Return**  \nint"
        }
      },
      "sortText":"119",
      "insertText":"pkg1PrivateFunc1(${1:a})",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"pkg1Func1(int a, int b, string hello)(boolean)",
      "kind":"Function",
      "detail":"Function",
      "documentation":{
        "right":{
          "kind":"markdown",
          "value":"markdown**Package:** _._  \n  \nnull  \n  \n---    \n**Parameters**  \n  \n  \n**Return**  \nboolean"
        }
      },
      "sortText":"120",
      "insertText":"pkg1Func1(${1:a}, ${2:b}, ${3:hello})",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"ep",
      "kind":"Variable",
      "detail":"ballerina/http:Listener",
      "sortText":"110",
      "insertText":"ep"
    },
    {
      "label":"ballerina/io",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"io"
    },
    {
      "label":"ballerina/http",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"http"
    },
    {
      "label":"ballerina/transactions",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"transactions",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/transactions;\n"
        }
      ]
    },
    {
      "label":"ballerina/websub",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"websub",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/websub;\n"
        }
      ]
    },
    {
      "label":"ballerina/grpc",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"grpc",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/grpc;\n"
        }
      ]
    },
    {
      "label":"ballerina/reflect",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"reflect",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/reflect;\n"
        }
      ]
    },
    {
      "label":"ballerina/log",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"log",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/log;\n"
        }
      ]
    },
    {
      "label":"ballerina/time",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"time",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/time;\n"
        }
      ]
    },
    {
      "label":"ballerina/test",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"test",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/test;\n"
        }
      ]
    },
    {
      "label":"ballerina/runtime",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"runtime",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/runtime;\n"
        }
      ]
    },
    {
      "label":"ballerina/openapi",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"openapi",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/openapi;\n"
        }
      ]
    },
    {
      "label":"ballerina/file",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"file",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/file;\n"
        }
      ]
    },
    {
      "label":"ballerina/sql",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"sql",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/sql;\n"
        }
      ]
    },
    {
      "label":"ballerina/internal",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"internal",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/internal;\n"
        }
      ]
    },
    {
      "label":"ballerina/mysql",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"mysql",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/mysql;\n"
        }
      ]
    },
    {
      "label":"ballerina/encoding",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"encoding",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/encoding;\n"
        }
      ]
    },
    {
      "label":"ballerina/mime",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"mime",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/mime;\n"
        }
      ]
    },
    {
      "label":"ballerina/task",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"task",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/task;\n"
        }
      ]
    },
    {
      "label":"ballerina/crypto",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"crypto",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/crypto;\n"
        }
      ]
    },
    {
      "label":"ballerina/artemis",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"artemis",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/artemis;\n"
        }
      ]
    },
    {
      "label":"ballerina/utils",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"utils",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/utils;\n"
        }
      ]
    },
    {
      "label":"ballerina/cache",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"cache",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/cache;\n"
        }
      ]
    },
    {
      "label":"ballerina/auth",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"auth",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/auth;\n"
        }
      ]
    },
    {
      "label":"ballerina/jms",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"jms",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/jms;\n"
        }
      ]
    },
    {
      "label":"ballerina/system",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"system",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/system;\n"
        }
      ]
    },
    {
      "label":"ballerina/h2",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"h2",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/h2;\n"
        }
      ]
    },
    {
      "label":"ballerina/builtin",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"builtin",
      "additionalTextEdits":[

      ]
    },
    {
      "label":"ballerina/math",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"math",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/math;\n"
        }
      ]
    },
    {
      "label":"ballerina/config",
      "kind":"Module",
      "detail":"Package",
      "sortText":"140",
      "insertText":"config",
      "additionalTextEdits":[
        {
          "range":{
            "start":{
              "line":2,
              "character":0
            },
            "end":{
              "line":2,
              "character":0
            }
          },
          "newText":"import ballerina/config;\n"
        }
      ]
    },
    {
      "label":"check",
      "kind":"Keyword",
      "detail":"Keyword",
      "sortText":"210",
      "insertText":"check ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"check",
      "kind":"Keyword",
      "detail":"Keyword",
      "sortText":"210",
      "insertText":"check ",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"but",
      "kind":"Snippet",
      "detail":"Statement",
      "sortText":"200",
      "insertText":"but {\n\t${1}\n};",
      "insertTextFormat":"Snippet"
    },
    {
      "label":"trap",
      "kind":"Snippet",
      "detail":"Snippet",
      "sortText":"190",
      "insertText":"trap ",
      "insertTextFormat":"Snippet"
    }
  ]
}
