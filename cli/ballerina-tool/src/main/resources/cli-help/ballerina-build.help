NAME
    Ballerina build - Build a Ballerina module(s)/file and generate executable
    outputs.

SYNOPSIS
    ballerina build [-o <output>] [--sourceroot] [--off-line] [--skip-tests]
                    [--skip-lock] {<ballerina-file | module-name> | -a | --all}

DESCRIPTION

    Building a Ballerina project or a specific module in a project creates the
    executable .jar files in the <project-root>/target/bin directory.

    Building a standalone Ballerina file will create an executable .jar file in the
    current directory. The name of the executable file will be
    <ballerina-file-name>-executable.jar.

    If the output file is specified with the -o flag, the output
    will be written to the given output file name. The -o flag will only work
    for standalone files.

OPTIONS
    -o <output>
        Write the output to the given file. The provided output
        file name may or may not contain the ‘.jar’ extension.

    --sourceroot <path>
        Provides the path to be taken as the root of the source.
        Source will be looked up relative to the given source root
        path.

    -c or --compile
        Compile the source without generating executable(s).

    -a or --all
        Build or compile all the modules of a project.

    --off-line
        Build offline without downloading the dependencies.

    --skip-tests
        Skip test compilation and execution.

    --skip-lock
        Skip using the lock file to resolve dependencies.

EXAMPLES
    Build the hello source program:
    $ ballerina build hello.bal
    This will generate a hello-executable.jar file.

    Build hello module:
    $ ballerina build hello
    This will generate a hello-executable.jar output file and place
    it within the <project-root>/target/bin directory.

    Build all the modules that have entry points in a project in to executables:
    $ ballerina build
    This will generate executable .jar files and place them within
    the <project-root>/target/bin directory.