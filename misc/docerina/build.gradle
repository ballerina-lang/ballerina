apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: 'com.github.johnrengelman.shadow'

configurations {
    distBal {
        transitive false
    }
}

dependencies {
    implementation project(':ballerina-core')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-launcher')
    implementation project(':ballerina-builtin')
    implementation project(':language-server:language-server-core')
    implementation project(':ballerina-http')
    implementation project(':ballerina-config')
    implementation project(':ballerina-mime')
    implementation 'info.picocli:picocli'
    implementation 'com.github.jknack:handlebars'
    implementation 'com.atlassian.commonmark:commonmark'
    implementation 'com.atlassian.commonmark:commonmark-ext-gfm-tables'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'commons-io:commons-io'
    implementation 'org.slf4j:slf4j-api'
    distBal project(path: ':ballerina-builtin', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-http', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-io', configuration: 'baloImplementation')
    
    testCompile 'org.testng:testng'
    testCompile project(':language-server:language-server-compiler')
    testCompile 'org.slf4j:slf4j-jdk14'

}

jar {
    enabled = false
    dependsOn(shadowJar { classifier = null })
    manifest {
        attributes(
            'Main-Class': 'org.ballerinalang.docgen.docs.BallerinaDocGeneratorMain',
            'Implementation-Title': 'Ballerina - Docerina',
            'Specification-Title': 'Ballerina - Docerina',
            'Specification-Vendor': 'WSO2',
            'Implementation-Vendor-Id': 'org.ballerinalang',
            'Implementation-Vendor': 'WSO2',
            'Implementation-URL': 'https://ballerina.io/misc/docerina/'
        )
    }
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(dependency('com.github.jknack:handlebars'))
        include(dependency('com.atlassian.commonmark:commonmark'))
        include(dependency('com.atlassian.commonmark:commonmark-ext-gfm-tables'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
}

task copyBalo(type: org.gradle.api.tasks.Copy) {
    from configurations.distBal
    into("$buildDir/lib")
}

description = 'Ballerina - Docerina'

test {
    dependsOn copyBalo
    systemProperty "ballerina.home", "$buildDir"

    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}
